const express = require('express');
const router = express.Router();
const Department = require('../models/department');

// ‚úÖ CREATE ‡πÅ‡∏ú‡∏ô‡∏Å‡πÉ‡∏´‡∏°‡πà
router.post('/', async (req, res) => {
  try {
    console.log('üì• ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤:', req.body);

    const { name, shortName, head } = req.body;

    const department = new Department({ name, shortName, head });
    await department.save();

    res.status(201).json(department);
  } catch (err) {
    console.error('‚ùå ERROR ‡∏Ç‡∏ì‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏ú‡∏ô‡∏Å:', err);
    res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ú‡∏ô‡∏Å' });
  }
});

// ‚úÖ READ ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
router.get('/', async (req, res) => {
  try {
    const departments = await Department.find(); // ‚ùå remove populate
    res.json(departments);
  } catch (err) {
    res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å' });
  }
});

// ‚úÖ READ ‡∏£‡∏≤‡∏¢‡∏ï‡∏±‡∏ß
router.get('/:id', async (req, res) => {
  try {
    const dept = await Department.findById(req.params.id); // ‚ùå remove populate
    if (!dept) return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÅ‡∏ú‡∏ô‡∏Å' });
    res.json(dept);
  } catch (err) {
    res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å' });
  }
});

// ‚úÖ UPDATE ‡πÅ‡∏ú‡∏ô‡∏Å
router.put('/:id', async (req, res) => {
  try {
    const { name, shortName, head } = req.body;

    // ‚ùå remove head validation with User
    const updated = await Department.findByIdAndUpdate(
      req.params.id,
      { name, shortName, head },
      { new: true }
    );

    if (!updated) return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÅ‡∏ú‡∏ô‡∏Å' });

    res.json(updated);
  } catch (err) {
    res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏ú‡∏ô‡∏Å' });
  }
});

// ‚úÖ DELETE ‡πÅ‡∏ú‡∏ô‡∏Å
router.delete('/:id', async (req, res) => {
  try {
    const deleted = await Department.findByIdAndDelete(req.params.id);
    if (!deleted) return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÅ‡∏ú‡∏ô‡∏Å' });

    res.json({ message: '‡∏•‡∏ö‡πÅ‡∏ú‡∏ô‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢' });
  } catch (err) {
    res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÅ‡∏ú‡∏ô‡∏Å' });
  }
});

module.exports = router;
